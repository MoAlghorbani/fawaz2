# Generated by Django 5.2 on 2025-08-30 18:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChecklistItems',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_description', models.TextField(help_text="Text of the item, e.g., 'مستوى زيت المحرك' (Engine oil level)")),
                ('sort_order', models.IntegerField(help_text='Number to control the order in which items appear on the form')),
            ],
            options={
                'verbose_name': 'Checklist Item',
                'verbose_name_plural': 'Checklist Items',
                'db_table': 'checklist_items',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('equipment_id', models.AutoField(primary_key=True, serialize=False)),
                ('serial_number', models.CharField(help_text="Equipment's serial number (الرقم التسلسلي)", max_length=100, unique=True)),
                ('equipment_type', models.CharField(help_text='Type of equipment (نوع المعدة), e.g., Excavator, Bulldozer', max_length=100)),
                ('model', models.CharField(help_text='Specific model of the equipment', max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Under Maintenance'), ('decommissioned', 'Decommissioned')], default='active', max_length=20)),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
                'db_table': 'equipment',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(help_text='Name of the person (سائق المعدة / المهندس المشرف)', max_length=200)),
                ('role', models.CharField(choices=[('operator', 'Operator'), ('supervisor', 'Supervisor'), ('admin', 'Admin')], max_length=20)),
                ('employee_number', models.CharField(help_text='Official employee number', max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='InspectionReports',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_number', models.CharField(help_text="Form's number (الرقم)", max_length=50)),
                ('start_date', models.DateField(help_text='Start of the inspection week (من تاريخ)')),
                ('end_date', models.DateField(help_text='End of the inspection week (الى تاريخ)')),
                ('working_hours_from', models.TimeField(help_text='Start of work hours (ساعات العمل من)')),
                ('working_hours_to', models.TimeField(help_text='End of work hours (الى ساعة)')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp for when the report was created')),
                ('equipment', models.ForeignKey(help_text='Equipment being inspected', on_delete=django.db.models.deletion.CASCADE, to='inspection.equipment')),
                ('operator', models.ForeignKey(help_text='Driver of the equipment', on_delete=django.db.models.deletion.CASCADE, related_name='operator_reports', to='inspection.users')),
                ('supervisor', models.ForeignKey(help_text='Engineer supervisor', on_delete=django.db.models.deletion.CASCADE, related_name='supervisor_reports', to='inspection.users')),
            ],
            options={
                'verbose_name': 'Inspection Report',
                'verbose_name_plural': 'Inspection Reports',
                'db_table': 'inspection_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportAttachments',
            fields=[
                ('attachment_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_path', models.FileField(help_text='Server path or URL to the stored image/file', upload_to='inspection_attachments/%Y/%m/%d/')),
                ('caption', models.CharField(blank=True, help_text='Optional description of the attachment', max_length=200, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(help_text='Links to the inspection report', on_delete=django.db.models.deletion.CASCADE, to='inspection.inspectionreports')),
            ],
            options={
                'verbose_name': 'Report Attachment',
                'verbose_name_plural': 'Report Attachments',
                'db_table': 'report_attachments',
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportNotes',
            fields=[
                ('note_id', models.AutoField(primary_key=True, serialize=False)),
                ('note_text', models.TextField(help_text='Content of the note (الملاحظات إن وجدت)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(help_text='Links to the inspection report', on_delete=django.db.models.deletion.CASCADE, to='inspection.inspectionreports')),
            ],
            options={
                'verbose_name': 'Report Note',
                'verbose_name_plural': 'Report Notes',
                'db_table': 'report_notes',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyInspectionData',
            fields=[
                ('inspection_data_id', models.AutoField(primary_key=True, serialize=False)),
                ('inspection_date', models.DateField(help_text="Specific date of the check (e.g., the date for 'Saturday')")),
                ('status', models.CharField(choices=[('good', 'Good'), ('not_good', 'Not Good')], help_text='Result of the check based on the legend', max_length=10)),
                ('item', models.ForeignKey(help_text='Links to the checklist item', on_delete=django.db.models.deletion.CASCADE, to='inspection.checklistitems')),
                ('report', models.ForeignKey(help_text='Links to the inspection report', on_delete=django.db.models.deletion.CASCADE, to='inspection.inspectionreports')),
            ],
            options={
                'verbose_name': 'Daily Inspection Data',
                'verbose_name_plural': 'Daily Inspection Data',
                'db_table': 'daily_inspection_data',
                'ordering': ['inspection_date', 'item__sort_order'],
                'unique_together': {('report', 'item', 'inspection_date')},
            },
        ),
    ]
